PROJECT (trax)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
GET_FILENAME_COMPONENT(PROJECT_ROOT . ABSOLUTE)
SET (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})

IF (NOT BUILD_VERSION)
    FIND_PACKAGE(Git)
    # Try to find the Git commit and use it as version identifier
    IF(GIT_FOUND)
       EXECUTE_PROCESS(
       COMMAND ${GIT_EXECUTABLE} rev-parse HEAD
       WORKING_DIRECTORY ${PROJECT_ROOT}
       OUTPUT_VARIABLE BUILD_VERSION
       OUTPUT_STRIP_TRAILING_WHITESPACE)
    ELSE()
        SET(BUILD_VERSION "unknown")
    ENDIF()
ENDIF()

ADD_DEFINITIONS(-DTRAX_BUILD_VERSION="${BUILD_VERSION}")

IF (WIN32 OR WIN64)
    SET(LIBRARIES ws2_32)
ELSE ()
    SET(LIBRARIES m)
    # Only build test executable on Unix systems / used only for development
    ADD_SUBDIRECTORY(lib/tests)
    IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
      SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -finstrument-functions")

    ENDIF ()    
ENDIF ()

LINK_LIBRARIES(${LIBRARIES})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/lib)

SET(TRAX_SOURCE lib/trax.c lib/region.c lib/strmap.c lib/message.c lib/base64.c lib/trax.cpp)
SET(TRAX_INSTALL_STATIC traxstatic)
SET(TRAX_INSTALL_SHARED trax)
SET(TRAX_INSTALL_EXEC "")

ADD_LIBRARY(trax SHARED ${TRAX_SOURCE})
ADD_LIBRARY(traxstatic STATIC ${TRAX_SOURCE})
SET_TARGET_PROPERTIES(traxstatic PROPERTIES POSITION_INDEPENDENT_CODE 1)

SET (BUILD_OPENCV FALSE CACHE BOOL "Build using OpenCV (examples, support library)")
IF (BUILD_OPENCV)
ADD_SUBDIRECTORY(support/opencv)
ENDIF (BUILD_OPENCV)

SET (BUILD_CLIENT FALSE CACHE BOOL "Build a client support library and executable")
IF (BUILD_CLIENT)
ADD_SUBDIRECTORY(support/client)
ENDIF (BUILD_CLIENT)

IF (WIN32 OR WIN64)
	INSTALL(TARGETS ${TRAX_INSTALL_SHARED} ${TRAX_INSTALL_EXEC} RUNTIME DESTINATION bin)
	INSTALL(TARGETS ${TRAX_INSTALL_STATIC} LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
ELSE ()
  INSTALL(TARGETS ${TRAX_INSTALL_EXEC} RUNTIME DESTINATION bin)
	INSTALL(TARGETS ${TRAX_INSTALL_SHARED} ${TRAX_INSTALL_STATIC} LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
ENDIF()
INSTALL(FILES lib/trax.h DESTINATION include)

ADD_SUBDIRECTORY(trackers)